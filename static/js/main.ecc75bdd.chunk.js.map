{"version":3,"sources":["logo.svg","components/TopNavBar.js","components/SearchBar.js","components/HeaderSearchBar.js","components/PostsList.js","App.js","reportWebVitals.js","index.js"],"names":["TopNavBar","className","src","logo","alt","render","history","onClick","push","id","SearchBar","props","state","value","handleChange","bind","handleSubmit","event","this","setState","target","onSearchSubmit","preventDefault","onSubmit","type","placeholder","onChange","React","Component","HeaderSearchBar","exact","path","PostsList","isSearchListEmpty","items","length","map","post","index","href","url","title","author","ups","subreddit","onFavouritesClick","isFavourite","App","handleSearch","searchInput","topTenPosts","fetch","then","res","json","response","error","topSubredditPosts","data","children","forEach","item","score","subreddit_subscribers","favouriteSubredditPosts","find","favouritesItem","e","console","log","handleFavouritesAction","modifiedTenPosts","favouritePosts","removeIndex","favouritePostsItem","indexOf","splice","localStorage","removeItem","modifiedItem","setItem","JSON","stringify","favourites","i","parse","getItem","key","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecc75bdd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from '../logo.svg';\nimport {\n    Route,\n} from \"react-router-dom\";\n\nfunction TopNavBar() {\n    return (\n            <nav className=\"bg-gray-800\">\n                <div className=\"hidden sm:block mx-auto\">\n                    <div className=\"relative flex items-center justify-between h-16\">\n                        <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                            <div className=\"flex-shrink-0 flex items-center\">\n                                <img className=\"hidden sm:block h-8 w-auto ml-6\" src={logo} alt=\"logo\"></img>\n                            </div>\n                            <div className=\"hidden sm:block sm:ml-6\">\n                                <div className=\"flex space-x-4\">\n                                    {/*<a href=\"Home\" className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\">Home</a>*/}\n                                    {/*<a href=\"List\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">List</a>*/}\n                                    <Route render={({ history}) => (\n                                        <button onClick={() => { history.push('/Search')}} className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Search</button>\n                                        )} />\n                                    <Route render={({ history}) => (\n                                        <button onClick={() => { history.push('/Favourites')}} className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Favourites</button>\n                                    )} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"sm:hidden\" id=\"mobile-menu\">\n                    <div className=\"px-2 pt-2 pb-3 space-y-1\">\n                        <Route render={({ history}) => (\n                            <button onClick={() => { history.push('/Search')}} className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\">Search</button>\n                        )} />\n                        <Route render={({ history}) => (\n                            <button onClick={() => { history.push('/Favourites')}} className=\"bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium\">Favourites</button>\n                        )} />\n                    </div>\n                </div>\n            </nav>\n    );\n}\n\nexport default TopNavBar;\n","import Search from \"@material-ui/icons/Search\";\nimport React from 'react';\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        this.props.onSearchSubmit(this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8 flex\">\n                <h1 className=\"text-3xl font-bold text-gray-900\">\n                    Search\n                </h1>\n                <div className=\"shadow w-8 ml-10\">\n                    <p className=\"m-2 font-bold text-gray-900\">\n                        r/\n                    </p>\n                </div>\n                <div className=\"shadow flex w-full\">\n                    <form onSubmit={this.handleSubmit} className=\"flex w-full\">\n                        <input className=\"w-full rounded p-2\" type=\"text\" placeholder=\"Search a subreddit here\" value={this.state.value} onChange={this.handleChange}/>\n                        <button\n                            className=\"bg-white w-auto flex justify-end items-center text-blue-500 p-2 hover:text-blue-400\">\n                            <Search/>\n                        </button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport {Route} from \"react-router-dom\";\nimport SearchBar from \"./SearchBar\";\n\nclass HeaderSearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(id) {\n        this.props.onSearchSubmit(id);\n    }\n\n    render() {\n        return (\n            <header className=\"bg-white shadow\">\n                <Route exact path=\"/\" render={() => (\n                    <SearchBar onSearchSubmit={this.handleSubmit}> </SearchBar>\n                )}/>\n                <Route path=\"/Search\" render={() => (\n                    <SearchBar onSearchSubmit={this.handleSubmit}> </SearchBar>\n                )}/>\n                <Route path=\"/Favourites\" render={() => (\n                    <h1 className=\"text-3xl font-bold text-gray-900 py-6 px-4 sm:px-6 lg:px-8\">Favourites</h1>\n                )}/>\n            </header>\n        );\n    }\n}\n\nexport default HeaderSearchBar;\n","import React from 'react';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\n\nclass PostsList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const isSearchListEmpty = this?.props?.items.length === 0;\n\n        return (\n            <div className=\"flex h-full bg-gray-200\">\n                    <div className=\"flex justify-center w-full\">\n                        <div className=\"bg-white shadow-xl rounded-lg w-2/3\">\n                            {\n                                isSearchListEmpty ? (\n                                    <div> No results found</div>\n                                ) :\n                                    (\n                                        <ul className=\"divide-y divide-gray-300\">\n                                            {\n                                                this?.props?.items.map((post, index) => (\n                                                    <div key={index} className=\"flex hover:bg-gray-50 cursor-pointer p-4\">\n                                                        <div className=\"w-11/12\">\n                                                            <a href={post.url}>\n                                                                <p className=\"font-bold\">{post.title}</p>\n                                                                <p className=\"italic text-gray-500\">Author: {post.author}</p>\n                                                                <p className=\"italic text-gray-500\">Ups: {post.ups}</p>\n                                                                <p className=\"italic text-gray-500\">Subreddit: {post.subreddit}</p>\n                                                            </a>\n                                                        </div>\n                                                        <div className=\"m-4\" onClick={() => { this.props.onFavouritesClick(post.id) }}>\n                                                            {\n                                                                post.isFavourite ? (\n                                                                    <StarIcon/>\n                                                                ) : (\n                                                                    <StarBorderIcon/>\n                                                                )\n                                                            }\n                                                        </div>\n\n                                                    </div>\n                                                ))}\n\n                                        </ul>\n                                    )\n                            }\n                            {/*<ul className=\"divide-y divide-gray-300\">*/}\n                            {/*    {*/}\n                            {/*        this?.props?.items.map((post, index) => (*/}\n                            {/*        <div key={index} className=\"flex hover:bg-gray-50 cursor-pointer p-4\">*/}\n                            {/*            <div className=\"w-11/12\">*/}\n                            {/*                <a href={post.url}>*/}\n                            {/*                    <p className=\"font-bold\">{post.title}</p>*/}\n                            {/*                    <p className=\"italic text-gray-500\">Author: {post.author}</p>*/}\n                            {/*                    <p className=\"italic text-gray-500\">Ups: {post.ups}</p>*/}\n                            {/*                    <p className=\"italic text-gray-500\">Subreddit: {post.subreddit}</p>*/}\n                            {/*                </a>*/}\n                            {/*            </div>*/}\n                            {/*            <div className=\"m-4\" onClick={() => { this.props.onFavouritesClick(post.id) }}>*/}\n                            {/*                {*/}\n                            {/*                    post.isFavourite ? (*/}\n                            {/*                        <StarIcon/>*/}\n                            {/*                    ) : (*/}\n                            {/*                        <StarBorderIcon/>*/}\n                            {/*                    )*/}\n                            {/*                }*/}\n                            {/*            </div>*/}\n\n                            {/*        </div>*/}\n                            {/*    ))}*/}\n\n                            {/*</ul>*/}\n                        </div>\n                    </div>\n            </div>\n        );\n    }\n}\n\nexport default PostsList;\n","import './App.css';\nimport TopNavBar from './components/TopNavBar';\nimport HeaderSearchBar from './components/HeaderSearchBar';\nimport PostsList from './components/PostsList';\nimport {\n    BrowserRouter as Router,\n    Route,\n} from \"react-router-dom\";\nimport React from \"react\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        const favourites = [];\n\n        for (var i = 0; i < localStorage.length; i++){\n            favourites.push(JSON.parse(localStorage.getItem(localStorage.key(i))));\n        }\n\n        this.state = {searchInput: '', topSubredditPosts: [], favouriteSubredditPosts: favourites};\n    }\n\n    handleSearch = (searchInput) => {\n        this.setState({searchInput: searchInput});\n        const topTenPosts = [];\n\n        try {\n        fetch(`https://www.reddit.com/r/${searchInput}/top/.json?limit=10`).then(\n            (res) =>\n                    res.json().then((response) => {\n                        if(response.error)\n                        {\n                            this.setState({topSubredditPosts: [] });\n                            throw 'Err';\n                        }\n                        response.data.children.forEach((item) => {\n                            try {\n                                topTenPosts.push({\n                                    author: item.data.author,\n                                    id: item.data.id,\n                                    score: item.data.score,\n                                    ups: item.data.ups,\n                                    url: item.data.url,\n                                    title: item.data.title,\n                                    subreddit_subscribers: item.data.subreddit_subscribers,\n                                    subreddit: item.data.subreddit,\n                                    isFavourite: this.state.favouriteSubredditPosts.find(favouritesItem => item.data.id === favouritesItem.id)\n                                })\n                            }\n                            catch(e)\n                            {\n                                console.log(e);\n                                this.setState({topSubredditPosts: [] });\n                            }\n                        });\n                        this.setState({topSubredditPosts: topTenPosts})\n                    })\n\n        );\n        } catch (e) {\n            console.log(e);\n            this.setState({topSubredditPosts: [] });\n        }\n    }\n\n    handleFavouritesAction = (id) => {\n        const modifiedTenPosts = [];\n        const favouritePosts = this.state.favouriteSubredditPosts;\n\n        this.state.topSubredditPosts.forEach((item) => {\n            if (item.id === id) {\n                item.isFavourite = !item.isFavourite;\n            }\n            modifiedTenPosts.push(item);\n        });\n\n        if(favouritePosts.find(item => item.id === id))\n        {\n            let removeIndex = favouritePosts.map(function(favouritePostsItem) {\n                return favouritePostsItem.id;\n            }).indexOf(id);\n            favouritePosts.splice(removeIndex, 1);\n            localStorage.removeItem(id);\n        }\n        modifiedTenPosts.forEach((modifiedItem) => {\n            if (modifiedItem.isFavourite && !favouritePosts.find(item => item.id === modifiedItem.id)) {\n                favouritePosts.push(modifiedItem);\n                localStorage.setItem(id, JSON.stringify(modifiedItem));\n            } else if (favouritePosts.find(item => item.id === modifiedItem.id) && modifiedItem.id === id) {\n                let removeIndex = favouritePosts.map(function(favouritePostsItem) {\n                    return favouritePostsItem.id;\n                }).indexOf(modifiedItem.id);\n                favouritePosts.splice(removeIndex, 1);\n                localStorage.removeItem(id);\n            }\n        })\n\n        this.setState({topSubredditPosts: modifiedTenPosts, favouriteSubredditPosts: favouritePosts});\n    }\n\n    render () {\n        return (\n            <Router>\n                <div>\n                    <TopNavBar> </TopNavBar>\n                    <HeaderSearchBar onSearchSubmit={this.handleSearch}>\n                    </HeaderSearchBar>\n                    <main>\n                        <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                                <div className=\"border-4 border border-gray-200 rounded-lg\">\n                                    <Route exact path=\"/\">\n                                        <PostsList items={this.state.topSubredditPosts} onFavouritesClick={this.handleFavouritesAction}>\n                                        </PostsList>\n                                    </Route>\n                                    <Route path=\"/Search\" render={() => (\n                                        <PostsList items={this.state.topSubredditPosts} onFavouritesClick={this.handleFavouritesAction}>\n                                        </PostsList>\n                                    )}/>\n                                    <Route path=\"/Favourites\" render={() => (\n                                        <PostsList items={this.state.favouriteSubredditPosts} onFavouritesClick={this.handleFavouritesAction}>\n                                        </PostsList>\n                                    )}/>\n                                </div>\n                        </div>\n                    </main>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}